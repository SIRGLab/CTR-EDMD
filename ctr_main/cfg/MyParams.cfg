#!/usr/bin/env python
PACKAGE = "ctr_main"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("beta_1",    double_t,    0, "beta_1", -0.28,  -0.505, 0)
gen.add("beta_2",    double_t,    0, "beta_2", -0.14,  -0.351, 0)
gen.add("beta_3",    double_t,    0, "beta_3", -0.03,  -0.25, 0)

gen.add("alpha_1",    double_t,    0, "alpha_1", 0,  -6.28, 6.28)
gen.add("alpha_2",    double_t,    0, "alpha_2", 0,  -6.28, 6.28)
gen.add("alpha_3",    double_t,    0, "alpha_3", 0,  -6.28, 6.28)

mode_enuum = gen.enum([ gen.const("manual",      int_t, 0, "manual"),
                       gen.const("koopman",      int_t, 1, "koopman")],
                     "Mode of operation")
gen.add("mode", int_t, 0, "Mode", 0, 0, 1, edit_method=mode_enuum)


task_enuum = gen.enum([gen.const("none",      int_t, 0, "none"),
                       gen.const("initial_learning",      int_t, 1, "initial_learning"),
                       gen.const("square",      int_t, 2, "square")],
                     "Tasks")

gen.add("task", int_t, 0, "Task", 0, 0, 2, edit_method=task_enuum)

gen.add("noise",    double_t,    0, "noise", 0.001,  0.00, 0.01)
gen.add("max_rotational",    double_t,    0, "max_rotational", 0.0005,  0, 1)
gen.add("max_translational",    double_t,    0, "max_translational", 0.0005,  0, 1)
gen.add("velocity",    double_t,    0, "velocity", 1,  0, 30)
gen.add("mpc_q",    double_t,    0, "mpc_q", 10000000000,  0, 100000000000)
gen.add("mpc_r_rot",    double_t,    0, "mpc_r_rot", 1,  0, 1000000)
gen.add("mpc_r_tr",    double_t,    0, "mpc_r_tr", 1,  0, 1000000)

exit(gen.generate(PACKAGE, "ctr_main", "MyParams"))
